@using Microsoft.AspNetCore.Http
@using SFA.DAS.TeachInFurtherEducation.Contentful.Model.Interim
@addTagHelper *, NetEscapades.AspNetCore.SecurityHeaders.TagHelpers

@model (IEnumerable<MenuItem>?, bool?)
<nav aria-label="top-menu" class="dfe-topnav" name="Other services navigation">
    <div class="govuk-width-container">
        <div class="flex-nav">
            @if (Model.Item1 != null && Model.Item1.Any())
            {
                var primaryMenuItems = Model.Item1.Where(x => x.TopLevelMenuItem);
                <ul class="flex-left">
                    @foreach (var item in primaryMenuItems)
                    {
                        <li>
                            <a href="@(Model.Item2.HasValue && Model.Item2.Value ? $"/preview{item.MenuItemSource}" : item.MenuItemSource)" id="services-tab">@item.MenuItemText</a>
                        </li>
                    }
                </ul>
            }
            <ul class="flex-right">
                <li>
                    &nbsp;
                </li>
                <li>
                    &nbsp;
                </li>
            </ul>
        </div>
    </div>
</nav>

<header class="dfe-header" role="banner">
    <div class="dfe-width-container dfe-header__container">
        <div class="dfe-header__logo">
            <a class="dfe-header__link" href="/" aria-label="DfE homepage">
                <image src="/images/DesignSystem/dfe-logo.png" class="dfe-logo" alt=""/>
                <image src="/images/DesignSystem/dfe-logo-alt.png" class="dfe-logo-hover" alt=""/>
            </a>
        </div>
        <div class="dfe-header__content" id="content-header">
            <div class="dfe-header__menu">
                <button class="dfe-header__menu-toggle" id="toggle-menu" aria-controls="header-navigation" aria-expanded="false">Menu</button>
            </div>
            <div class="dfe-header__search">
                <image src="/images/DesignSystem/FurtherEducation.png" class="fe-logo" alt=""/>
            </div>
        </div>
    </div>
    <div class="dfe-width-container dfe-header__service-name">
        <a href="/" class="dfe-header__link--service">Further Education</a>
    </div>


    <nav class="dfe-header__navigation" id="header-navigation" role="navigation" aria-label="Primary navigation" aria-labelledby="label-navigation">
        <div class="dfe-width-container">
            <p class="dfe-header__navigation-title">
                <span id="label-navigation">Menu</span>
                <button class="dfe-header__navigation-close" id="close-menu">
                    <svg class="dfe-icon dfe-icon__close" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" aria-hidden="true" focusable="false" width="27" height="27">
                        <path d="M13.41 12l5.3-5.29a1 1 0 1 0-1.42-1.42L12 10.59l-5.29-5.3a1 1 0 0 0-1.42 1.42l5.3 5.29-5.3 5.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0l5.29-5.3 5.29 5.3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z"></path>
                    </svg>
                    <span class="govuk-visually-hidden">Close menu</span>
                </button>
            </p>
            <ul class="dfe-header__navigation-list">
                @if (Model.Item1 != null && Model.Item1.Any())
                {
                    var secondaryMenuItems = Model.Item1.Where(x => !x.TopLevelMenuItem);
                    foreach (var item in secondaryMenuItems)
                    {
                        <li class="dfe-header__navigation-item ">
                            <a class="dfe-header__navigation-link" href="@(Model.Item2.HasValue && Model.Item2.Value ? $"/preview{item.MenuItemSource}" : item.MenuItemSource)">
                                @item.MenuItemText
                                <svg class="dfe-icon dfe-icon__chevron-right" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" aria-hidden="true" width="34" height="34">
                                    <path d="M15.5 12a1 1 0 0 1-.29.71l-5 5a1 1 0 0 1-1.42-1.42l4.3-4.29-4.3-4.29a1 1 0 0 1 1.42-1.42l5 5a1 1 0 0 1 .29.71z"></path>
                                </svg>
                            </a>
                        </li>
                    }
                }
            </ul>
        </div>
    </nav>


</header>

<script nonce="@Context.GetNonce()">
    (() => {
        var o = {
            621: () => {
                NodeList.prototype.forEach || (NodeList.prototype.forEach = Array.prototype.forEach),
                    Array.prototype.includes || Object.defineProperty(Array.prototype, "includes", {
                        enumerable: !1,
                        value: function (t) {
                            return 0 < this.filter(function (e) {
                                return e === t
                            }).length
                        }
                    }),
                    Element.prototype.matches || (Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector),
                    Element.prototype.closest || (Element.prototype.closest = function (e) {
                        var t = this;
                        do {
                            if (Element.prototype.matches.call(t, e))
                                return t
                        } while (null !== (t = t.parentElement || t.parentNode) && 1 === t.nodeType);
                        return null
                    }
                    )
            }
        }
            , r = {};
        function n(e) {
            var t = r[e];
            return void 0 !== t || (t = r[e] = {
                exports: {}
            },
                o[e](t, t.exports, n)),
                t.exports
        }
        (() => {
            "use strict";
            function l(e, t) {
                var o;
                e && t && (o = "true" === e.getAttribute(t) ? "false" : "true",
                    e.setAttribute(t, o))
            }
            n(621),
                document.addEventListener("DOMContentLoaded", function () {
                    var t, o, r, n, e, c, s;
                    function a(e) {
                        e.preventDefault(),
                            l(n, "aria-expanded"),
                            n.classList.toggle("is-active"),
                            c.classList.toggle("js-show"),
                            s.classList.toggle("js-show")
                    }
                    t = document.querySelector("#toggle-menu"),
                        e = document.querySelector("#close-menu"),
                        o = document.querySelector("#header-navigation"),
                        r = function (e) {
                            e.preventDefault(),
                                l(t, "aria-expanded"),
                                t.classList.toggle("is-active"),
                                o.classList.toggle("js-show")
                        }
                        ,
                        t && e && o && [t, e].forEach(function (e) {
                            e.addEventListener("click", r)
                        }),
                        n = document.querySelector("#toggle-search"),
                        e = document.querySelector("#close-search"),
                        c = document.querySelector("#wrap-search"),
                        s = document.querySelector("#content-header"),
                        n && e && [n, e].forEach(function (e) {
                            e.addEventListener("click", a)
                        })
                })
        }
        )()
    }
    )();
</script>